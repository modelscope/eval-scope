{"idx": 0, "prompt": "Python中如何打印出一个字符串的所有子序列，用函数实现。例如，输入\"aba\"，该函数应该返回[\"a\", \"b\", \"a\", \"ab\", \"ba\", \"aa\", \"aba\", \"aab\", \"baa\", \"abaa\"]。", "target": [], "func_args": ["aba"], "func_outputs": [["a", "b", "a", "ab", "ba", "aa", "aba", "aab", "baa", "abaa"]], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 1, "prompt": "写一个python函数，实现计算列表中最大值与最小值之差的功能。例如，输入[1, 2, -3, 4, -5]，该函数应该返回10。", "target": [], "func_args": [[1, 2, -3, 4, -5]], "func_outputs": [10], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 2, "prompt": "用python编写一个 Mid 函数以提取员工工号中的中间字符。例如，输入\"ABC1234\"，该函数应该返回\"1\"。", "target": [], "func_args": ["ABC1234"], "func_outputs": ["1"], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 3, "prompt": "给定一组整数，设计一个python排序函数，以将其从小到大排序。例如，输入[3, 2, 5, 1, 5]，该函数应该返回[1, 2, 3, 5, 5]。", "target": [], "func_args": [[3, 2, 5, 1, 5]], "func_outputs": [[1, 2, 3, 5, 5]], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 4, "prompt": "编写一个Python函数，在一个数字列表中找到最大和次大的数字，并返回它们的索引。例如，输入[5, 4, 3, 2, 1]，该函数应该返回[0,1]。", "target": [], "func_args": [[5, 4, 3, 2, 1]], "func_outputs": [[0, 1]], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 5, "prompt": "写一段python函数，将一个字符串按照单词翻转，但单词内的字母顺序不变。例如，输入\"I love Python\"，该函数应该返回\"Python love I\"。", "target": [], "func_args": ["I love Python"], "func_outputs": ["Python love I"], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 6, "prompt": "设计一个用于将一个浮点数分解为一个包含整数和小数的列表的python函数。例如，输入1.23，该函数应该返回[1, 0.23]。", "target": [], "func_args": [1.23], "func_outputs": [[1, 0.23]], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 7, "prompt": "编写一个python函数，将一个数字转换成其对应的英文表示。例如，输入999999，该函数应该返回\"nine hundred ninety-nine thousand nine hundred ninety-nine\"。", "target": [], "func_args": [999999], "func_outputs": ["nine hundred ninety-nine thousand nine hundred ninety-nine"], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 8, "prompt": "给定一个包含多个字符串的列表，编写一个python函数，筛选出其中长度大于等于 5 的字符串。例如，输入[\"abcdefg\", \"hijk\", \"lmnop\"]，该函数应该返回[\"abcdefg\", \"lmnop\"]。", "target": [], "func_args": [["abcdefg", "hijk", "lmnop"]], "func_outputs": [["abcdefg", "lmnop"]], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 9, "prompt": "编写一个Python函数，查找字符串中第一个不重复的字符。例如，输入[\"abcdefg\", \"hijk\", \"lmnop\"]，该函数应该返回[\"abcdefg\", \"lmnop\"]。", "target": [], "func_args": [["abcdefg", "hijk", "lmnop"]], "func_outputs": [["abcdefg", "lmnop"]], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 10, "prompt": "给定一个列表，编写一个Python函数来找出其中的最大值和最小值。例如，输入[-10, 0, 10, 20, 30]，该函数应该返回[-10, 30]。", "target": [], "func_args": [[-10, 0, 10, 20, 30]], "func_outputs": [[-10, 30]], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 11, "prompt": "编写一个Python函数，给定一组字符串，对它们进行排序，要求排序后的字符串都按照字典序排列。使用动态规划算法。例如，输入[\"apple\", \"orange\", \"banana\"]，该函数应该返回[\"apple\", \"banana\", \"orange\"]。", "target": [], "func_args": [["apple", "orange", "banana"]], "func_outputs": [["apple", "banana", "orange"]], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 12, "prompt": "写一个python函数，实现一个算法，找出一个字符串中最长的回文子串，并返回其起始和结束位置。例如，输入\"baabd\"，该函数应该返回[0,2]。", "target": [], "func_args": ["baabd"], "func_outputs": [[0, 2]], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 13, "prompt": "写一个python函数，来查找给定字符串列表中的最长公共前缀。例如，输入[\"flower\", \"flow\", \"flight\"]，该函数应该返回\"fl\"。", "target": [], "func_args": [["flower", "flow", "flight"]], "func_outputs": ["fl"], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 14, "prompt": "给定一个由数字组成的数组，编写一个python函数，返回数组中第二大的数字。例如，输入[9, 5, 2, 7, 1]，该函数应该返回7。", "target": [], "func_args": [[9, 5, 2, 7, 1]], "func_outputs": [7], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 15, "prompt": "写一个python函数，输入一个字符串，输出最后一个出现的重复字符。字符串只包括数字和中英文字母。例如，输入\"AbcDDdddcab\"，该函数应该返回\"b\"。", "target": [], "func_args": ["AbcDDdddcab"], "func_outputs": ["b"], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 16, "prompt": "用Python编写一个函数，输入n为偶数时，调用函数求1/2+1/4+...+1/n,当输入n为奇数时，调用函数1/1+1/3+...+1/。例如，输入4，该函数应该返回0.75。", "target": [], "func_args": [4], "func_outputs": [0.75], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 17, "prompt": "用Python编写一个函数，给定一个未排序的整数数组，找出最长连续序列。例如，输入[5,50,4,51,1,3,2,52,8,6]，该函数应该返回[1,2,3,4,5,6]。", "target": [], "func_args": [[5, 50, 4, 51, 1, 3, 2, 52, 8, 6]], "func_outputs": [[1, 2, 3, 4, 5, 6]], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 18, "prompt": "用Python编写一个函数，找到一个包含一组数字的列表中的第一组连续的相同数字的下标。例如，输入[1,2,2,3,4,4,4,5,6,7,7]，该函数应该返回[1,2]。", "target": [], "func_args": [[1, 2, 2, 3, 4, 4, 4, 5, 6, 7, 7]], "func_outputs": [[1, 2]], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 19, "prompt": "用Python编写一个函数，查找输入的字符串中最长不重复子字符串。例如，输入\"abcbdea\"，该函数应该返回\"bcdea\"。", "target": [], "func_args": ["abcbdea"], "func_outputs": ["bcdea"], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 20, "prompt": "用Python编写一个函数，判断一个形如\\\"1,5,6,9,3\\\"字符串中是否有两个以上的连续自然数，返回True或False。例如，输入\"3,4,5,6,7\"，该函数应该返回True。", "target": [], "func_args": ["3,4,5,6,7"], "func_outputs": [true], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 21, "prompt": "用Python编写一个函数，输入一个整数数组 nums ，判断这个数组中是否存在长度为 3 的递增子序列。\\n\\n如果存在这样的三元组下标 (i, j, k) 且满足 i < j < k ，使得 nums[i] < nums[j] < nums[k] ，返回 True ；否则，返回 False 。例如，输入[5,1,5,5,5,5,5]，该函数应该返回True。", "target": [], "func_args": [[5, 1, 5, 5, 5, 5, 5]], "func_outputs": [true], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 22, "prompt": "实现一个Python函数，接受一个字符串作为输入，然后输出将字符串中的每个单词首字母大写，其他字母小写的结果。例如，输入\"What Is tHe CApiTAL of CHINA\"，该函数应该返回\"What Is The Capital Of China\"。", "target": [], "func_args": ["What Is tHe CApiTAL of CHINA"], "func_outputs": ["What Is The Capital Of China"], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 23, "prompt": "编写一个Python函数，以给定的列表作为输入，并查找该列表中的最长递增子序列。例如，输入[1, 5, 3, 4, 6, 9]，该函数应该返回[1, 3, 4, 6, 9]。", "target": [], "func_args": [[1, 5, 3, 4, 6, 9]], "func_outputs": [[1, 3, 4, 6, 9]], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 24, "prompt": "编写一个Python函数，该函数将输入列表中的所有字符串连接在一起，然后返回连接后的字符串。例如，输入['Hello', 'World', '!', '']，该函数应该返回\"HelloWorld!\"。", "target": [], "func_args": [["Hello", "World", "!", ""]], "func_outputs": ["HelloWorld!"], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 25, "prompt": "编写一个Python函数，输入一个字符串，输出其中单词\"the\"出现的次数。例如，输入\"the quick brown fox jumps over the lazy dog\"，该函数应该返回2。", "target": [], "func_args": ["the quick brown fox jumps over the lazy dog"], "func_outputs": [2], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 26, "prompt": "编写一个Python函数，输入一个整数列表，将列表中所有大于5的数字乘以2，并返回新的列表。例如，输入[1, 2, 6, 7, 8, 9, 10]，该函数应该返回[1, 2, 12, 14, 16, 18, 20]。", "target": [], "func_args": [[1, 2, 6, 7, 8, 9, 10]], "func_outputs": [[1, 2, 12, 14, 16, 18, 20]], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 27, "prompt": "编写一个Python函数，输入一个整数列表，返回列表中所有奇数的平方和。例如，输入[-3, 0, 2, 5, 7]，该函数应该返回83。", "target": [], "func_args": [[-3, 0, 2, 5, 7]], "func_outputs": [83], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 28, "prompt": "编写一个Python函数，输入一个英文字符串，将其转为小写，并返回字符串中出现频率最高的单词。例如，输入\"Hello world, hello chatbot. This is a sample text for testing.\"，该函数应该返回\"hello\"。", "target": [], "func_args": ["Hello world, hello chatbot. This is a sample text for testing."], "func_outputs": ["hello"], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 29, "prompt": "编写一个Python函数，输入一个英文字符串，检查字符串中的重复字符并返回该字符串的压缩版本，其中重复字符被替换为字符本身和其连续出现的次数。例如，输入\"aaAAAbBB\"，该函数应该返回\"3a3Ab2B\"。", "target": [], "func_args": ["aaAAAbBB"], "func_outputs": ["3a3Ab2B"], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 30, "prompt": "编写一个Python函数，输入一个字符串，判断该字符串是否为回文字符串（正反读都一样）。例如，输入\"racecar\"，该函数应该返回True。", "target": [], "func_args": ["racecar"], "func_outputs": [true], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 31, "prompt": "编写一个Python函数，输入一个整数列表，返回列表中两个数的下标，使得它们的和等于9。例如，输入[2, 7, 11, 15]，该函数应该返回[0, 1]。", "target": [], "func_args": [[2, 7, 11, 15]], "func_outputs": [[0, 1]], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 32, "prompt": "编写一个Python函数，输入一个字符串，返回该字符串中\"o\"出现的次数。例如，输入\"hello world\"，该函数应该返回2。", "target": [], "func_args": ["hello world"], "func_outputs": [2], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 33, "prompt": "编写一个Python函数，输入一个整数列表，返回列表中的最大值和最小值。例如，输入[4, 2, 9, 5, 7]，该函数应该返回[9, 2]。", "target": [], "func_args": [[4, 2, 9, 5, 7]], "func_outputs": [[9, 2]], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 34, "prompt": "编写一个Python函数，输入一个整数，返回它和18的最大公约数。例如，输入12，该函数应该返回6。", "target": [], "func_args": [12], "func_outputs": [6], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 35, "prompt": "编写一个Python函数，输入一个字符串，返回字符串中长度为3的所有子串。例如，输入\"hello\"，该函数应该返回[\"hel\", \"ell\", \"llo\"]。", "target": [], "func_args": ["hello"], "func_outputs": [["hel", "ell", "llo"]], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 36, "prompt": "编写一个Python函数，输入一个整数n，返回斐波那契数列的第n个数。例如，输入5，该函数应该返回5。", "target": [], "func_args": [5], "func_outputs": [5], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 37, "prompt": "编写一个Python函数，输入一个字符串，将该字符串分成长度为3的子串，并返回一个列表。例如，输入\"abcdefghi\"，该函数应该返回[\"abc\", \"def\", \"ghi\"]。", "target": [], "func_args": ["abcdefghi"], "func_outputs": [["abc", "def", "ghi"]], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 38, "prompt": "编写一个Python函数，输入一个字符串，将该字符串向右旋转3个字符。例如，输入\"abcdefg\"，该函数应该返回\"efgabcd\"。", "target": [], "func_args": ["abcdefg"], "func_outputs": ["efgabcd"], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 39, "prompt": "编写一个Python函数，输入一个整数n，返回1到n之间的所有素数。例如，输入10，该函数应该返回[2, 3, 5, 7]。", "target": [], "func_args": [10], "func_outputs": [[2, 3, 5, 7]], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 40, "prompt": "编写一个Python函数，该函数接受一个整数列表作为输入，返回列表中最大的三个不同整数的乘积。例如，输入[1, 2, 3, 4, 5]，该函数应该返回60。", "target": [], "func_args": [[1, 2, 3, 4, 5]], "func_outputs": [60], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 41, "prompt": "编写一个Python函数，输入一个整数n，返回所有的n位质数。例如，输入3，该函数应该返回[101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199]。", "target": [], "func_args": [3], "func_outputs": [[101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199]], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 42, "prompt": "编写一个Python函数，输入一个字符串，将字符串中的元音字母（a,e,i,o,u）替换为数字（1,2,3,4,5），并返回替换后的字符串。例如，输入\"hello world\"，该函数应该返回\"h2ll4 w4rld\"。", "target": [], "func_args": ["hello world"], "func_outputs": ["h2ll4 w4rld"], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 43, "prompt": "编写一个Python函数，输入一个字符串s1，判断s1和\"add\"是否为同构字符串。同构字符串指的是s1中的每个字符都可以替换为\"add\"中对应位置的字符，且\"add\"中的每个字符也都可以替换为s1中对应位置的字符。例如，输入\"egg\"，该函数应该返回True。", "target": [], "func_args": ["egg"], "func_outputs": [true], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 44, "prompt": "编写一个Python函数，输入一个正整数n，返回n的所有因子。例如，输入12，该函数应该返回[1, 2, 3, 4, 6, 12]。", "target": [], "func_args": [12], "func_outputs": [[1, 2, 3, 4, 6, 12]], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 45, "prompt": "编写一个Python函数，输入一个字符串，返回字符串中出现次数最多的字符及其出现次数。例如，输入\"hello world\"，该函数应该返回{'l': 3}。", "target": [], "func_args": ["hello world"], "func_outputs": [{"l": 3}], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 46, "prompt": "编写一个Python函数，输入一个整数n，返回n的阶乘的末尾0的个数。例如，输入5，该函数应该返回1。", "target": [], "func_args": [5], "func_outputs": [1], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 47, "prompt": "编写一个Python函数，将一个二进制字符串转换为十进制整数。例如，输入'1010'，该函数应该返回10。", "target": [], "func_args": ["1010"], "func_outputs": [10], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 48, "prompt": "编写一个Python函数，将一个给定的整数列表转换为对应的二进制字符串列表。例如，输入[1, 2, 3, 4]，该函数应该返回['0b1', '0b10', '0b11', '0b100']。", "target": [], "func_args": [[1, 2, 3, 4]], "func_outputs": [["0b1", "0b10", "0b11", "0b100"]], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 49, "prompt": "编写一个Python函数，接受一个列表参数，并返回这个列表和[3, 4, 5, 6]的交集。例如，输入[1, 2, 3, 4]，该函数应该返回[3, 4]。", "target": [], "func_args": [[1, 2, 3, 4]], "func_outputs": [[3, 4]], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 50, "prompt": "编写一个Python函数，计算给定列表中所有元素的平均值。该函数应该接受一个列表参数，并返回该列表所有元素的平均值。例如，输入[1, 2, 3, 4, 5]，该函数应该返回3.0。", "target": [], "func_args": [[1, 2, 3, 4, 5]], "func_outputs": [3.0], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 51, "prompt": "编写一个Python函数，找到一个整数列表中的最长连续子序列，该子序列中的元素总和最大。例如，输入[2, -4, 1, 9, -6, 7, -3]，该函数应该返回[1, 9, -6, 7]。", "target": [], "func_args": [[2, -4, 1, 9, -6, 7, -3]], "func_outputs": [[1, 9, -6, 7]], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 52, "prompt": "编写一个Python函数，输入一个字符串列表和，返回列表中所有长度为3的字符串。例如，输入[\"hello\", \"world\", \"python\"]，该函数应该返回[\"hel\", \"wor\", \"pyt\"]。", "target": [], "func_args": [["hello", "world", "python"]], "func_outputs": [["hel", "wor", "pyt"]], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 53, "prompt": "编写一个Python函数，输入一个整数n，返回n的所有因数。例如，输入12，该函数应该返回[1, 2, 3, 4, 6, 12]。", "target": [], "func_args": [12], "func_outputs": [[1, 2, 3, 4, 6, 12]], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 54, "prompt": "编写一个Python函数，输入一个字符串，将字符串中与字典{\"hello\": \"hi\", \"world\": \"earth\"}中的键相同的部分替换为对应的值。例如，输入\"hello world\"，该函数应该返回\"hi earth\"。", "target": [], "func_args": ["hello world"], "func_outputs": ["hi earth"], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 55, "prompt": "编写一个Python函数，输入一个整数n，返回第n个丑数。丑数是只包含2、3、5因子的正整数。例如，输入10，该函数应该返回12。", "target": [], "func_args": [10], "func_outputs": [12], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 56, "prompt": "编写一个Python函数，输入一个字符串，判断该字符串是否为有效的IPv4地址，有效则返回True，无效返回False。例如，输入\"192.168.0.1\"，该函数应该返回True。", "target": [], "func_args": ["192.168.0.1"], "func_outputs": [true], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 57, "prompt": "编写一个Python函数，输入一个字符串，返回其中出现次数最多的单词的出现次数。例如，输入\"hello world hello\"，该函数应该返回2。", "target": [], "func_args": ["hello world hello"], "func_outputs": [2], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 58, "prompt": "编写一个Python函数，输入一个正整数n，返回一个n×n的螺旋矩阵。例如，输入3，该函数应该返回[[1, 2, 3], [8, 9, 4], [7, 6, 5]]。", "target": [], "func_args": [3], "func_outputs": [[[1, 2, 3], [8, 9, 4], [7, 6, 5]]], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 59, "prompt": "编写一个Python函数，输入一个整数n，返回n的二进制表示中包含的1的个数。例如，输入5，该函数应该返回2。", "target": [], "func_args": [5], "func_outputs": [2], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 60, "prompt": "编写一个Python函数，输入一个字符串，将该字符串中的所有连续重复的字符缩减为一个，并返回修改后的字符串。例如，输入\"helloo worldd\"，该函数应该返回\"helo world\"。", "target": [], "func_args": ["helloo worldd"], "func_outputs": ["helo world"], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 61, "prompt": "编写一个Python函数，输入一个字符串，将该字符串中长度为2的所有子串的字符排序后再连接起来，返回连接后的字符串。例如，输入\"dcba\"，该函数应该返回\"bcdacdba\"。", "target": [], "func_args": ["dcba"], "func_outputs": ["bcdacdba"], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 62, "prompt": "编写一个Python函数，输入一个整数n，返回一个n×n的矩阵，矩阵中每个元素的值为该元素所在的行和列的乘积。例如，输入3，该函数应该返回[[0, 0, 0], [0, 1, 2], [0, 2, 4]]。", "target": [], "func_args": [3], "func_outputs": [[[0, 0, 0], [0, 1, 2], [0, 2, 4]]], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 63, "prompt": "编写一个Python函数，输入一个字符串，将该字符串中所有的数字转换为其二进制表示，并返回转换后的字符串。例如，输入\"ab12cd34\"，该函数应该返回\"ab1100cd100010\"。", "target": [], "func_args": ["ab12cd34"], "func_outputs": ["ab1100cd100010"], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 64, "prompt": "编写一个Python函数，输入一个整数n，返回所有的n位二进制数列，其中任意两个数列的汉明距离（即不同位数的个数）都相同。例如，输入3，该函数应该返回[\"000\", \"111\", \"011\", \"101\"]。", "target": [], "func_args": [3], "func_outputs": [["000", "111", "011", "101"]], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 65, "prompt": "编写一个Python函数，输入一个字符串列表，返回在该列表中与\"hiya\"最相似的字符串。相似度使用编辑距离计算。例如，输入[\"hello\", \"hi\", \"hola\", \"world\"]，该函数应该返回\"hi\"。", "target": [], "func_args": [["hello", "hi", "hola", "world"]], "func_outputs": ["hi"], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 66, "prompt": "写一段python函数，对输入字符串进行截断，输出前8个字符。例如，输入'Hello, World! This is a string input.'，该函数应该返回'Hello, Wo'。", "target": [], "func_args": ["Hello, World! This is a string input."], "func_outputs": ["Hello, Wo"], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 67, "prompt": "写一段python函数，输入一个数字列表，输出列表中第二大的值。例如，输入[3, 8, 2, 10, 4, 6]，该函数应该返回6。", "target": [], "func_args": [[3, 8, 2, 10, 4, 6]], "func_outputs": [6], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 68, "prompt": "写一段python函数，返回输入的字符串的所有子串组合。例如，输入\"abc\"，该函数应该返回['a', 'b', 'c', 'ab', 'bc', 'abc']。", "target": [], "func_args": ["abc"], "func_outputs": [["a", "b", "c", "ab", "bc", "abc"]], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 69, "prompt": "写一段python函数，将gdf时间格式解析成时间戳。例如，输入'2022-03-29 10:30:45.123456'，该函数应该返回1645961445.123456。", "target": [], "func_args": ["2022-03-29 10:30:45.123456"], "func_outputs": [1645961445.123456], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 70, "prompt": "编写一个Python的快速排序函数，输入一个数字列表，返回从小到大排序后的列表。例如，输入[3, 8, 2, 10, 4, 6]，该函数应该返回[2, 3, 4, 6, 8, 10]。", "target": [], "func_args": [[3, 8, 2, 10, 4, 6]], "func_outputs": [[2, 3, 4, 6, 8, 10]], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 71, "prompt": "写一段python函数，将一个列表分成相邻的子列表，使得相邻子列表之间的差值最小。例如，输入[1, 2, 4, 7, 11, 16]，该函数应该返回[[1, 2, 4, 7, 11], [16]]。", "target": [], "func_args": [[1, 2, 4, 7, 11, 16]], "func_outputs": [[[1, 2, 4, 7, 11], [16]]], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 72, "prompt": "写一段python函数，输入整数秒，将其转换为xx天xx时xx分xx秒并输出。例如，输入86400，该函数应该返回\"1天0时0分0秒\"。", "target": [], "func_args": [86400], "func_outputs": ["1天0时0分0秒"], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 73, "prompt": "写一段python函数，验证字符串中括号的有效性，有效则输出True，无效则输出False。例如，输入\"([)\"，该函数应该返回False。", "target": [], "func_args": ["([)"], "func_outputs": [false], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 74, "prompt": "写一段python函数，输入一个手机号，判断其是否符合规范，符合则输出True，不符合则输出False。例如，输入'12345678901'，该函数应该返回False。", "target": [], "func_args": ["12345678901"], "func_outputs": [false], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 75, "prompt": "写一段python函数，输入大写的金额，输出它的数字表示。例如，输入\"贰佰叁拾肆万伍千陆百柒十八元整\"，该函数应该返回2345678。", "target": [], "func_args": ["贰佰叁拾肆万伍千陆百柒十八元整"], "func_outputs": [2345678], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 76, "prompt": "写一段python函数，输入多维数组，输出它展平后的一维数组。例如，输入[[1, 2, 3], [4, 5], [6, 7, 8, 9]]，该函数应该返回[1, 2, 3, 4, 5, 6, 7, 8, 9]。", "target": [], "func_args": [[[1, 2, 3], [4, 5], [6, 7, 8, 9]]], "func_outputs": [[1, 2, 3, 4, 5, 6, 7, 8, 9]], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 77, "prompt": "写一段python函数，输入一个整数数组，判断数组的上涨或下跌趋势，上涨则输出True，下跌则输出False。例如，输入[1, 2, 3, 4, 5]，该函数应该返回True。", "target": [], "func_args": [[1, 2, 3, 4, 5]], "func_outputs": [true], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 78, "prompt": "请你为我编写一个python函数，用于计算字符串中最后一个出现的重复字符。需要注意的是，这个字符串只包括数字和中英文字母。例如，输入\"abcbde\"，该函数应该返回\"b\"。", "target": [], "func_args": ["abcbde"], "func_outputs": ["b"], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 79, "prompt": "编写一个python函数，需要将字符串中所有包含\"sum(...)\"的部分都替换为\"cast(sum(...) as string)\"。例如，输入\"sum(a) + sum(b) + sum(c)\"，该函数应该返回\"cast(sum(a) as string) + cast(sum(b) as string) + cast(sum(c) as string)\"。", "target": [], "func_args": ["sum(a) + sum(b) + sum(c)"], "func_outputs": ["cast(sum(a) as string) + cast(sum(b) as string) + cast(sum(c) as string)"], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 80, "prompt": "编写一个python函数，输入一个二维数组，将其顺时针旋转90度然后输出。例如，输入[[1, 2, 3],[4, 5, 6],[7,8,9]]，该函数应该返回[[7, 4, 1],[8, 5, 2],[9,6,3]]。", "target": [], "func_args": [[[1, 2, 3], [4, 5, 6], [7, 8, 9]]], "func_outputs": [[[7, 4, 1], [8, 5, 2], [9, 6, 3]]], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 81, "prompt": "编写一个python函数，输入一个有序数组中，输出数组中的两个数，使它们的和为100。例如，输入[1, 2, 3, 50, 51, 99, 100]，该函数应该返回[1, 99]。", "target": [], "func_args": [[1, 2, 3, 50, 51, 99, 100]], "func_outputs": [[1, 99]], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 82, "prompt": "编写一个python函数，输入一个字符串，判断其中是否存在经过base64编码后的子字符串，存在则输出True，不存在则输出False。例如，输入\"encoded substring: YWJjZGVmZw==\"，该函数应该返回True。", "target": [], "func_args": ["encoded substring: YWJjZGVmZw=="], "func_outputs": [true], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 83, "prompt": "编写一个python函数，输入一个数字列表，输出其中第一组相邻、相同数字中第一个数字所对应的索引，索引从0开始计数。例如，输入[1, 2, 3, 4, 4, 5, 6, 7, 8]，该函数应该返回3。", "target": [], "func_args": [[1, 2, 3, 4, 4, 5, 6, 7, 8]], "func_outputs": [3], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 84, "prompt": "写一个用Python编写的函数，输入一段文本，该函数可以去除文本中所有的标点符号和数字，并且还可以去除所有的http地址。例如，输入\"Hello, World! This is a sample text. It contains numbers like 123 and symbols like @ and #. It also has a URL like https://www.example.com.\"，该函数应该返回\"Hello World This is a sample text It contains numbers like and symbols like and It also has a URL like\"。", "target": [], "func_args": ["Hello, World! This is a sample text. It contains numbers like 123 and symbols like @ and #. It also has a URL like https://www.example.com."], "func_outputs": ["Hello World This is a sample text It contains numbers like and symbols like and It also has a URL like"], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 85, "prompt": "写一个用Python编写的函数，输入一个字符串，返回其最长不重复子字符串。例如，输入\"pwwkew\"，该函数应该返回\"wke\"。", "target": [], "func_args": ["pwwkew"], "func_outputs": ["wke"], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 86, "prompt": "写一个用Python编写的函数，输入一个包含多个中文词语的列表，任意组合中文词语，输出所有可能的中文组合。例如，输入['东方', \"航空\"]，该函数应该返回['东方', \"航空\", '东方航空', '航空东方']。", "target": [], "func_args": [["东方", "航空"]], "func_outputs": [["东方", "航空", "东方航空", "航空东方"]], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 87, "prompt": "写一个用Python编写的函数，输入一个字符串，把字符串里的数字加1然后输出。例如，输入 \"abc123xyz\"，该函数应该返回\"abc234xyz\"。", "target": [], "func_args": ["abc123xyz"], "func_outputs": ["abc234xyz"], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 88, "prompt": "宝宝，请给我写一个Python函数，输入一个字符串按照分隔符','来分割成列表并输出。例如，输入 \"apple,banana,pear\"，该函数应该返回[\"apple\", \"banana\", \"pear\"]。", "target": [], "func_args": ["apple,banana,pear"], "func_outputs": [["apple", "banana", "pear"]], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 89, "prompt": "需要编写一个Python函数来判断输入的字符串是否包含两个或更多连续的自然数。字符串的格式应类似于\"1,5,6,9,3\"。例如，输入\"1,2,3,4,5\"，该函数应该返回True。", "target": [], "func_args": ["1,2,3,4,5"], "func_outputs": [true], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 90, "prompt": "编写一个Python函数，可以删除字符串中所有的英文字母和符号，只保留汉字。例如，输入\"Hello, world! 你好，世界!\"，该函数应该返回\"你好世界\"。", "target": [], "func_args": ["Hello, world! 你好，世界!"], "func_outputs": ["你好世界"], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 91, "prompt": "编写一个python函数，需要在一个字符串中寻找出现次数最多的字符，并且如果有两个字符出现次数相同，输出在前面的那个字符。例如，输入\"abcccddddeeeee\"，该函数应该返回\"e\"。", "target": [], "func_args": ["abcccddddeeeee"], "func_outputs": ["e"], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 92, "prompt": "编写Python的一个函数可以实现如下功能：当输入一个字符串时，仅保留前两行。例如，输入\"This is line 1.\\nThis is line 2.\\nThis is line 3.\\nThis is line 4.\"，该函数应该返回\"This is line 1.\\nThis is line 2.\"。", "target": [], "func_args": ["This is line 1.\nThis is line 2.\nThis is line 3.\nThis is line 4."], "func_outputs": ["This is line 1.\nThis is line 2."], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 93, "prompt": "编写一个python函数，判断一个字符串中是否包含ASCII的特殊无宽度字符。例如，输入\"Hello\\u200bWorld\"，该函数应该返回True。", "target": [], "func_args": ["Hello​World"], "func_outputs": [true], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 94, "prompt": "编写一个Python函数，将一个字符串中的所有数字字符替换成\"*\"。例如，输入\"hello123world\"，该函数应该返回\"hello***world\"。", "target": [], "func_args": ["hello123world"], "func_outputs": ["hello***world"], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 95, "prompt": "编写一个Python函数，将一个列表中的元素连接成一个字符串，并用\"-\"分隔。例如，输入[\"apple\", \"banana\", \"pear\"]，该函数应该返回\"apple-banana-pear\"。", "target": [], "func_args": [["apple", "banana", "pear"]], "func_outputs": ["apple-banana-pear"], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 96, "prompt": "编写一个Python函数，将一个字符串中的所有字母都变为小写，并去除所有标点符号和空格。例如，输入\"Hello, world!\"，该函数应该返回\"helloworld\"。", "target": [], "func_args": ["Hello, world!"], "func_outputs": ["helloworld"], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 97, "prompt": "编写一个Python函数，输入一个字符串，返回其中所有的数字，以列表形式输出。例如，输入 \"a1b2c3\"，该函数应该返回 [1, 2, 3]。", "target": [], "func_args": ["a1b2c3"], "func_outputs": [[1, 2, 3]], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 98, "prompt": "编写一个 Python 函数，输入一个字符串并计算其中单词的个数。假设单词是由空格分隔开的。例如，输入 \"hello world\"，该函数应该返回 2。", "target": [], "func_args": ["hello world"], "func_outputs": [2], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
{"idx": 99, "prompt": "编写一个Python函数，输入一个整数列表，输出其中所有的子序列中，差值最大的一组子序列（即该子序列中最大元素减去最小元素的值最大）。例如，输入[1, 5, 3, 8, 4]，该函数应该返回[1, 8]。", "target": [], "func_args": [[1, 5, 3, 8, 4]], "func_outputs": [[1, 8]], "task_tags": ["python_code"], "ability_tags": ["逻辑推理|CODING"], "industry_tags": ["信息传输、软件和信息技术服务业|互联网与软件"], "metric": ["pass@k"]}
